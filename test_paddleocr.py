#!/usr/bin/env python3
"""
Test des param√®tres PaddleOCR pour diagnostiquer les probl√®mes
"""
import sys
from rich.console import Console
from rich.panel import Panel
from rich.text import Text
from rich import print as rprint

console = Console()

def test_paddleocr_params():
    """Test des param√®tres PaddleOCR support√©s"""
    try:
        from paddleocr import PaddleOCR
        console.print("[green]‚úÖ Import PaddleOCR r√©ussi[/green]")
    except ImportError as e:
        console.print(f"[red]‚ùå Import PaddleOCR √©chou√©: {e}[/red]")
        return False

    # Test config minimale
    console.print("\n[blue]üß™ Test config minimale...[/blue]")
    try:
        with console.status("[bold green]Initialisation..."):
            ocr = PaddleOCR(use_angle_cls=True, lang="fr", show_log=False)
        console.print("[green]‚úÖ Config minimale OK[/green]")
        return True
    except Exception as e:
        console.print(f"[red]‚ùå Config minimale √©chou√©e: {e}[/red]")

    # Test encore plus minimal
    console.print("\n[blue]üß™ Test ultra-minimal...[/blue]")
    try:
        with console.status("[bold yellow]Initialisation ultra-minimale..."):
            ocr = PaddleOCR(lang="fr")
        console.print("[green]‚úÖ Config ultra-minimale OK[/green]")
        return True
    except Exception as e:
        console.print(f"[red]‚ùå Config ultra-minimale √©chou√©e: {e}[/red]")
        return False

if __name__ == "__main__":
    # Banni√®re de diagnostic
    banner = Text()
    banner.append("üîç DIAGNOSTIC PADDLEOCR\n", style="bold cyan")
    banner.append("Test des configurations support√©es", style="italic blue")

    panel = Panel(
        banner,
        border_style="bright_cyan",
        padding=(1, 2)
    )
    console.print(panel)

    success = test_paddleocr_params()

    if success:
        console.print("\n[bold green]üéâ PaddleOCR fonctionne correctement![/bold green]")
    else:
        console.print("\n[bold red]‚ùå Probl√®me avec PaddleOCR[/bold red]")
        sys.exit(1)